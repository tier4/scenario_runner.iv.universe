<?xml version="1.0" encoding="UTF-8" ?>
<launch>
  <node pkg="scenario_api" exec="scenario_api_node" name="scenario_api_sample" output="screen">
    <remap from="/input/pointcloud" to="/sensing/lidar/no_ground/pointcloud" />
    <remap from="/input/vectormap" to="/map/vector_map" />
    <remap from="/input/route" to="/planning/mission_planning/route" />
    <remap from="/input/autoware_state" to="/autoware/state" />
    <remap from="/input/vehicle_twist" to="/vehicle/status/twist" />
    <remap from="/input/signal_command" to="/vehicle/status/turn_signal" />
    <remap from="/output/start_point" to="/initialpose" />
    <remap from="/output/initial_velocity" to="/initialtwist" />
    <remap from="/output/goal_point" to="/planning/mission_planning/goal" />
    <remap from="/output/check_point" to="/planning/mission_planning/checkpoint" />
    <remap from="/output/autoware_engage" to="/autoware/engage" />
    <remap from="/output/simulator_engage" to="/vehicle/engage" />
    <remap from="/output/npc_simulator_engage" to="/simulation/npc_simulator/engage" />
    <remap from="/output/limit_velocity" to="/planning/scenario_planning/max_velocity" />
    <remap from="/output/object_info" to="/simulation/npc_simulator/object_info" />
    <remap from="/output/traffic_detection_result" to="/perception/traffic_light_recognition/traffic_light_states" />
    <remap from="/output/lane_change_permission" to="/planning/scenario_planning/lane_driving/lane_change_approval" />
    <remap from="/rosparam/add_simulator_noise" to="/simple_planning_simulator/add_measurement_noise" /> <!-- rosparam: add simulator noise or not -->
    <remap from="/rosparam/simulator_pos_noise" to="/simple_planning_simulator/pos_noise_stddev" /> <!-- rosparam: std of simulator pos noise -->
    <remap from="/rosparam/max_velocity" to="/planning/scenario_planning/motion_velocity_optimizer/max_velocity" /> <!-- rosparam: max velocity -->
    <param name="camera_frame_id" value="camera5/camera_optical_link" /> <!-- base link of front camera-->
  </node>
</launch>
